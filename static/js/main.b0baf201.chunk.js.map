{"version":3,"sources":["logoIcon.png","Header/Header.js","Main/Home.js","Main/AboutUs.js","Main/ContactUs.js","Main/Routes.js","Main/Menu.js","Main/Main.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMenuClick","bind","assertThisInitialized","react_default","a","createElement","className","HamburgerMenu_default","isOpen","isMenu","menuClicked","width","height","strokeWidth","rotate","color","borderRadius","animationDuration","src","logoIcon","alt","Component","Home","AboutUs","ContactUs","Routes","react_router","exact","path","component","Menu","onClick","onMenuItemClick","Main","menuItem","nextProps","Main_Menu","Main_Routes","Copyright","styled","div","_templateObject","Footer","App","setState","state","history","push","src_Header_Header","src_Main_Main","Footer_Footer","withRouter","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0baf201.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoIcon.1512d4c8.png\";","import React, { Component } from 'react';\nimport HamburgerMenu from 'react-hamburger-menu';\nimport logoIcon from '../logoIcon.png';\nimport './Header.css';\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n  }\n\n  handleMenuClick = () => {\n    this.props.handleMenuClick();\n  }\n\n  render() {\n    \n    return (\n      <div className=\"Header\">\n        <header className=\"App-header\">\n          <div className=\"menu-icon\"><HamburgerMenu\n            isOpen={this.props.isMenu}\n            menuClicked={this.handleMenuClick}\n            width={32}\n            height={20}\n            strokeWidth={3}\n            rotate={0}\n            color='white'\n            borderRadius={0}\n            animationDuration={0.5}\n          /></div>\n          <div className=\"logo-icon\">\n            <img width=\"80%\" height=\"80%\" src={ logoIcon } alt=\"App Logo\" />\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport './Main.css';\n\nfunction Home() {\n  return (\n    <div className=\"App-main\">\n        <div className=\"main-content\">App home!!</div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './Main.css';\n\nfunction AboutUs() {\n  return (\n    <div className=\"App-main\">\n        <div className=\"main-content\">About Us!!</div>\n    </div>\n  );\n}\n\nexport default AboutUs;\n","import React from 'react';\nimport './Main.css';\n\nfunction ContactUs() {\n  return (\n    <div className=\"App-main\">\n        <div className=\"main-content\">Contact Us!!</div>\n    </div>\n  );\n}\n\nexport default ContactUs;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport AboutUs from './AboutUs';\nimport ContactUs from './ContactUs';\nimport './Main.css';\n\nclass Routes extends Component {\n\n    render() {\n        return (\n            <Switch>\n                <Route exact path='/' component={Home}/>\n                <Route path='/home' component={Home}/>\n                <Route path='/aboutus' component={AboutUs}/>\n                <Route path='/contactus' component={ContactUs}/>\n            </Switch>\n        );\n    }\n}\n\nexport default Routes;\n","import React from 'react';\nimport './Main.css';\nimport './Menu.css';\n\nfunction Menu(props) {\n  return (\n    <div className=\"App-main\">\n        <div className=\"main-content\">\n            <ul className=\"menu-items\">\n                <li onClick={() => props.onMenuItemClick('home')}> HOME </li>\n                <li onClick={() => props.onMenuItemClick('aboutus')}> ABOUT US </li>\n                <li onClick={() => props.onMenuItemClick('contactus')}> CONTACT US </li>\n            </ul>\n        </div>\n    </div>\n  );\n}\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport Routes from './Routes';\nimport Menu from './Menu';\nimport './Main.css';\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onMenuItemClick = this.onMenuItemClick.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.isMenu = nextProps.isMenu;\n        this.onMenuItemClick = nextProps.onMenuItemClick;\n    }\n\n    onMenuItemClick = (menuItem) => {\n        this.props.onMenuItemClick(menuItem);\n    }\n\n    render() {\n        let component = this.isMenu ? <Menu onMenuItemClick={this.onMenuItemClick}/> : <Routes />;\n        return (   \n            <div className=\"App-main\">\n                <div className=\"main-content\">\n                    {component}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Main;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Copyright = styled.div`\n  text-align: center;\n  font-family: Rajdhani;\n  color: white;\n`\nfunction Footer() {\n  return (\n      <footer className=\"App-footer\">\n        <Copyright>\n            Copyright Â© 2019 WebIoTSolutions\n        </Copyright>\n      </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from './Header/Header'\nimport Main from './Main/Main';\nimport Footer from './Footer/Footer';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isMenu : false\n        };\n        this.handleMenuClick = this.handleMenuClick.bind(this);\n    }\n    \n    handleMenuClick = () => {\n        this.setState({\n            isMenu: !this.state.isMenu\n        });\n    }\n\n    onMenuItemClick = (menuItem) => {\n        this.setState({\n            isMenu: !this.state.isMenu\n        });\n\n        this.props.history.push(menuItem);\n    }\n\n    render() {\n        return(\n        <div className=\"App\">\n            <Header handleMenuClick={this.handleMenuClick} isMenu={this.state.isMenu}/>\n            <Main onMenuItemClick={this.onMenuItemClick} isMenu={this.state.isMenu}/>\n            <Footer />\n        </div>\n        )\n    }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}